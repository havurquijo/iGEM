name: Build & Deploy Frozen-Flask to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r dependencies.txt

      - name: Show routes & generator output (debug)
        run: |
          python - <<'PY'
          from app import app, pages as gen
          print("== ROTAS ==")
          for r in app.url_map.iter_rules():
              print(r)
          print("\n== URLS GERADAS PELO GENERATOR ==")
          c=0
          for kw in gen():
              print("  /%s" % kw["page"])
              c+=1
          print(f"TOTAL: {c}")
          assert c>0, "Generator não emitiu nenhuma página além da home."
          PY

      - name: Freeze site
        env:
          FLASK_APP: app
        run: |
          flask freeze
          test -f public/index.html
          # Ajuste estes 'test -f' para algumas páginas que você tem certeza que existem:
          # Exemplo:
          test -f public/team/members/index.html || true
          touch public/.nojekyll
          echo "== LISTA PUBLIC =="
          find public -maxdepth 3 -type f -name '*.html' | sed -n '1,200p'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          if-no-files-found: error

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
